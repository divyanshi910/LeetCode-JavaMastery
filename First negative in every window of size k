class Solution {
    static List<Integer> firstNegInt1(int nums[], int k) {
        // write code here
        List<Integer> result=new ArrayList<>();
        for(int i=0;i<=nums.length-k;i++){
            boolean found=false;
            for(int j=i;j<i+k;j++){
                if(nums[j]<0){
                    result.add(nums[j]);
                    found=true;
                    break;
                }
            }
                    if(!found){
                        result.add(0);
                    }
            
        }
        return result;
    }
    static List<Integer> firstNegInt(int nums[], int k) {
         List<Integer> result=new ArrayList<>();
         Queue<Integer> queue=new LinkedList<>();
         for(int i=0;i<k;i++){
             if(nums[i]<0){
                 queue.offer(nums[i]);
                 
             }
         }
         result.add(queue.isEmpty()?0:queue.peek());
         for(int i=1;i<nums.length-k+1;i++){
             //remove from window
             if(nums[i-1]<0) {
                queue.poll();
         }
         //add in the window
         if(nums[i+k-1]<0){
             queue.offer(nums[i+k-1]);
         }
         result.add(queue.isEmpty()?0:queue.peek());
    }
    return result;
}
}
